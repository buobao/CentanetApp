apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion ANDROID_BUILD_SDK_VERSION as int
    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId "com.cetnaline.findproperty"
        minSdkVersion ANDROID_BUILD_MIN_SDK_VERSION as int
        targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION as int
        versionCode APP_VERSION_CODE as int
        versionName APP_VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            storeFile file("findproperty.jks")
            storePassword "centanetfindproperty"
            keyAlias "findproperty"
            keyPassword "centanetfindproperty"
        }
        debug {
            storeFile file("findproperty.jks")
            storePassword "centanetfindproperty"
            keyAlias "findproperty"
            keyPassword "centanetfindproperty"
        }
    }

    buildTypes {
        debug {
//            buildConfigField('boolean', 'DEBUG', 'true')
            versionNameSuffix "-d"
            buildConfigField "String", "API_URL", "\"${project.property("TEST_API_HOST")}\""
            //"\"${project.property("FORMAL_API_LOCATION")}\""
        }

        release {
            buildConfigField "String", "API_URL", "\"${project.property("FORMAL_API_HOST")}\""
            //"\"${project.property("FORMAL_API_LOCATION")}\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

greendao {
    schemaVersion DATABASE_VERSION as int
    daoPackage 'com.cetnaline.findproperty.database.dao'
    targetGenDir 'src/main/java'
    generateTests false
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:' + SUPPORT_LIB_VERSION
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //butterknife
    implementation 'com.jakewharton:butterknife:' + BUTTER_KNIFE_VERSION
    annotationProcessor 'com.jakewharton:butterknife-compiler:' + BUTTER_KNIFE_VERSION
    //rxjava
    implementation "io.reactivex.rxjava2:rxjava:" + RX_JAVA_VERSION
    //rxjava android
    implementation 'io.reactivex.rxjava2:rxandroid:' + RX_JAVA_ANDROID_VERSION
    //retrofit2
    implementation 'com.squareup.retrofit2:retrofit:' + RETROFIT2_VERSION
    //gson
    implementation 'com.google.code.gson:gson:' + GSON_VERSION
    //gson convert
    implementation 'com.squareup.retrofit2:converter-gson:' + GSON_CONVERT_VERSION
    //retrofit2 adapter
    implementation 'com.squareup.retrofit2:adapter-rxjava2:'+ RETROFIT2_ADAPTER_VERSION
    //glide
    implementation 'com.github.bumptech.glide:glide:' + GLIDE_VERSION
    annotationProcessor 'com.github.bumptech.glide:compiler:' + GLIDE_VERSION
    //greendao
    implementation 'org.greenrobot:greendao:' + GREEN_DAO_VERSION
}
